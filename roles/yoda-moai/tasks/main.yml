---
# copyright Utrecht University

- name: Ensure Yoda MOAI prerequisites are installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
  - python-lxml
  - python-sqlalchemy
  - python-webob
  - python-paste
  - python-paste-deploy
  - python-paste-script
  - python-six
  - mod_wsgi


- name: Check if yoda-moai packages are available in repository
  yum:
    list: '{{ item.value.package }}'
  with_dict: "{{ yoda_moai_packages }}"
  register: yoda_moai_packages_repo


- name: Download yoda-moai packages if not in repository
  get_url:
    url: "{{ item.item.value.url }}/{{ item.item.value.filename }}"
    dest: "{{ rpm_dest_dir }}/{{ item.item.value.filename }}"
    checksum: "{{ item.item.value.checksum }}"
  when: not item.results
  with_items: "{{ yoda_moai_packages_repo.results }}"


- name: Ensure yoda-moai packages are installed from downloaded rpm's
  yum:
    name: "{{ rpm_dest_dir }}/{{ item.item.value.filename }}"
    state: present
  when: not item.results
  with_items: "{{ yoda_moai_packages_repo.results }}"


- name: Ensure yoda-moai packages are already installed or install from repo
  package:
    name: "{{ item.value.package }}"
    state: present
  with_dict: "{{ yoda_moai_packages }}"


- name: Ensure Yoda MOAI user exists
  user:
    name: '{{ yoda_moai_user }}'
    home: '{{ yoda_moai_home }}'


- name: Ensure Yoda MOAI home is world readable
  file:
    path: '{{ yoda_moai_home }}'
    mode: 0755
    owner: '{{ yoda_moai_user }}'
    group: '{{ yoda_moai_user }}'
    state: directory


- name: Ensure inbox user exists
  user:
    name: '{{ yoda_inbox_user }}'


- name: Add upload user pub key to authorized_keys of inbox
  authorized_key:
    user: '{{ yoda_inbox_user }}'
    key: '{{ upload_pub_key | b64decode }}'
    state: present


- name: Ensure metadata inbox exists and is readable for moai
  file:
    path: '{{ yoda_metadata_inbox }}'
    owner: '{{ yoda_inbox_user }}'
    group: '{{ yoda_moai_user }}'
    mode: 02750
    state: directory


- name: Install moai.wsgi
  template:
    src: moai.wsgi.j2
    dest: '{{ yoda_moai_home }}/moai.wsgi'
    owner: '{{ yoda_moai_user }}'
    group: '{{ yoda_moai_user }}'
    mode: 0644
  notify: Restart Apache webserver


- name: Install settings.ini for Yoda MOAI
  template:
    src: moai-settings.ini.j2
    dest: '{{ yoda_moai_home }}/settings.ini'
    owner: '{{ yoda_moai_user }}'
    group: '{{ yoda_moai_user }}'
    mode: 0644
  notify: Restart Apache webserver


- name: Initialize Yoda MOAI database
  become_user: '{{ yoda_moai_user }}'
  become: yes
  command: '/usr/local/bin/update_moai -q --config {{ yoda_moai_home }}/settings.ini yoda_moai &>/dev/null'
  args:
    creates: '{{ yoda_moai_home }}/moai.db'


- name: Set SELinux context for Yoda MOAI database
  sefcontext:
    target: '{{ yoda_moai_home }}/moai.db'
    setype: httpd_sys_rw_content_t
    state: present
  register: filecontext
  when: ansible_selinux


- name: Ensure selinux context is enforced on Yoda MOAI database
  shell: 'restorecon {{ yoda_moai_home }}/{{ item.target }}'
  when: filecontext is changed and ansible_selinux
  with_items:
  - { index: 0, target: 'moai.db' }


- name: Configure cronjob to update MOAI database
  cron:
    user: '{{ yoda_moai_user }}'
    name: 'cronjob-update-moai'
    minute: '*/5'
    job: '/usr/local/bin/update_moai -q --config {{ yoda_moai_home }}/settings.ini yoda_moai &>/dev/null'
